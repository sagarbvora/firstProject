[{"C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\reportWebVitals.js":"1","C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\Crud.js":"2","C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\App.js":"3","C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\index.js":"4","C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\Hook_CRUD.js":"5"},{"size":362,"mtime":1606711964516,"results":"6","hashOfConfig":"7"},{"size":15511,"mtime":1606821593579,"results":"8","hashOfConfig":"7"},{"size":293,"mtime":1606823848849,"results":"9","hashOfConfig":"7"},{"size":547,"mtime":1606717739330,"results":"10","hashOfConfig":"7"},{"size":10824,"mtime":1606829310436,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9g1mk5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\reportWebVitals.js",[],"C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\Crud.js",["24","25","26","27"],"import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport \"./CrudData.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst initialOrg = {\r\n    Name: \"\",\r\n    Abbrevlation: \"\",\r\n    Contact_Email: \"\",\r\n    Website: \"\",\r\n    Nr_Employees: \"\",\r\n    Revenue: \"\",\r\n    Profit: \"\",\r\n    AuthorAnonymous: false\r\n};\r\n\r\nconst numOfEmployees = [\r\n    {value: \"\", label: \"Please Select...\"},\r\n    {value: \"1-10\", label: \"1-10\"},\r\n    {value: \"11-50\", label: \"11-50\"},\r\n    {value: \"51-100\", label: \"51-100\"},\r\n    {value: \"101-500\", label: \"101-500\"},\r\n    {value: \"More than 500\", label: \"More than 500\"},\r\n];\r\n\r\nclass OrgForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            organization: initialOrg,\r\n            list: [],\r\n            errors: {},\r\n            isEditable: null\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        let webStore = JSON.parse(localStorage.getItem(\"list\"));\r\n        if (webStore !== null) {\r\n            this.setState({list: webStore});\r\n        }\r\n    }\r\n \r\n    onChange = (event) => {\r\n        const {name, value} = event.target;\r\n        // console.log(value);\r\n        // this.handleSubmit();\r\n        this.setState(prevState => ({\r\n            organization: {\r\n                ...prevState.organization,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    validate = (name, value) => {\r\n        const emailRegx = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/ig;\r\n        const webRegex = /^[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/g;\r\n        const numRegx = /^\\d{1,6}(?:\\.\\d{0,2})?$/g;\r\n        switch (name) {\r\n            case 'Name':\r\n                if (!value) return \"Name is required\";\r\n                return null;\r\n            case 'Abbrevlation':\r\n                if (!value) return \"Abbreviation is required\";\r\n                return null;\r\n            case 'Contact_Email':\r\n                if (!emailRegx.test(value)) return \"Email is required\";\r\n                return null;\r\n            case 'Website':\r\n                if (!webRegex.test(value)) return \"Website is required\";\r\n                return null;\r\n            case 'Nr_Employees':\r\n                if (!value) return \"Number of employee is required\";\r\n                return null;\r\n            case 'Revenue':\r\n                if (!numRegx.test(value)) return \"Revenue is required\";\r\n                return null;\r\n            case 'Profit':\r\n                if (!numRegx.test(value)) return \"Profit is required\";\r\n                return null;\r\n            case 'AuthorAnonymous':\r\n                if (!(value)) return \"Post is selected\";\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    handleSubmit = async () => {\r\n        const {organization, list, isEditable} = this.state;\r\n        let errors = {};\r\n        Object.keys(organization).forEach((key) => {\r\n            const error = this.validate(key, organization[key]);\r\n            if (error && error.length) {\r\n                errors[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errors).length) {\r\n            return this.setState({errors});\r\n        } else {\r\n            if (isEditable !== null && isEditable !== -1) {\r\n                list[isEditable] = organization;\r\n                this.setState({\r\n                    list,\r\n                    organization: initialOrg,\r\n                    isEditable: null\r\n                });\r\n                localStorage.setItem(\"list\", JSON.stringify(list));\r\n            } else {\r\n                list.push(organization)\r\n                this.setState({\r\n                    list,\r\n                    organization: initialOrg,\r\n                    isEditable: null\r\n                });\r\n                localStorage.setItem(\"list\", JSON.stringify(list));\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n    EditData = (index) => {\r\n        const {list} = this.state;\r\n        const orgUpdate = {\r\n            Name: list[index].Name,\r\n            Abbrevlation: list[index].Abbrevlation,\r\n            Contact_Email: list[index].Contact_Email,\r\n            Website: list[index].Website,\r\n            Nr_Employees: list[index].Nr_Employees,\r\n            Revenue: list[index].Revenue,\r\n            Profit: list[index].Profit,\r\n            AuthorAnonymous: list[index].AuthorAnonymous\r\n        };\r\n        // console.log(index);\r\n        this.setState({\r\n            organization: orgUpdate,\r\n            isEditable: index\r\n        });\r\n    }\r\n    DeleteData = (index) => {\r\n        const {list} = this.state;\r\n        list.splice(index, 1);\r\n        // list.filter((item)=>{ return item.id !== index});\r\n        this.setState({\r\n            list\r\n        });\r\n        localStorage.removeItem(\"list\");\r\n        localStorage.setItem(\"list\", JSON.stringify(list));\r\n    }\r\n\r\n    render() {\r\n        const {organization, errors, list} = this.state;\r\n        return (\r\n\r\n            <Col sm={12}>\r\n                <div className=\"form-div\">\r\n                    <Row className=\"mt-3\">\r\n                        <Col md={2} className=\"text-center\">Name</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Name\"\r\n                                value={organization.Name}\r\n                                name=\"Name\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Name}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Abbrevlation</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Abbreviation\"\r\n                                value={organization.Abbrevlation}\r\n                                name=\"Abbrevlation\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Abbrevlation}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Email</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Please Enter Your Email...\"\r\n                                value={organization.Contact_Email}\r\n                                name=\"Contact_Email\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Contact_Email}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Website</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Website\"\r\n                                value={organization.Website}\r\n                                name=\"Website\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Website}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    {/*no. Employees*/}\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Nr Employees</Col>\r\n                        <Col md={8}>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                style={{width: '100%'}}\r\n                                name=\"Nr_Employees\"\r\n                                placeholder=\"Please select...\"\r\n                                value={organization.Nr_Employees || \"\"}\r\n                                onChange={this.onChange}\r\n                            >\r\n                                {numOfEmployees.map((noOfEmployee, index) => <option key={noOfEmployee.value}\r\n                                                                                     disabled={index === 0}\r\n                                                                                     value={noOfEmployee.value}>{noOfEmployee.label}</option>)}\r\n                            </select>\r\n                            <span className=\"text-danger\">{errors.Nr_Employees}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Revenue</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Revenue\"\r\n                                value={organization.Revenue}\r\n                                name=\"Revenue\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Revenue}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2} className=\"text-center\">Profit</Col>\r\n                        <Col md={8}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Profit\"\r\n                                value={organization.Profit}\r\n                                name=\"Profit\"\r\n                                onChange={this.onChange}\r\n                                maxLength={100}\r\n                            />\r\n                            <span className=\"text-danger\">{errors.Profit}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={2}/>\r\n                        <Col md={8}>\r\n                            <div className=\"form-check\">\r\n                                <input type=\"radio\" className=\"form-check-input\" onChange={this.onChange}\r\n                                       name=\"AuthorAnonymous\" value=\"Post anonymously\"\r\n                                       checked={organization.AuthorAnonymous === \"Post anonymously\"}/>\r\n                                <label className=\"form-check-label\" htmlFor=\"AuthorAnonymous1\">Post anonymously</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input type=\"radio\" className=\"form-check-input\" onChange={this.onChange}\r\n                                       name=\"AuthorAnonymous\" value=\"Post as myself\"\r\n                                       checked={organization.AuthorAnonymous === \"Post as myself\"}/>\r\n                                <label className=\"form-check-label\" htmlFor=\"AuthorAnonymous2\">Post as myself</label>\r\n                            </div>\r\n                            <span className=\"text-danger\">{errors.AuthorAnonymous}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-2 text-right\">\r\n                        <Col md={11}>\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={this.handleSubmit}>\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Row className=\"mt-5 text-center\">\r\n                    <Col md={12}>\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <td>Id</td>\r\n                                <td>Name</td>\r\n                                <td>Abbrevlation</td>\r\n                                <td>Email</td>\r\n                                <td>Website</td>\r\n                                <td>Employees</td>\r\n                                <td>Revenue</td>\r\n                                <td>Profit</td>\r\n                                <td>Post</td>\r\n                                <td>Action</td>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {Array.isArray(list) && list.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index} id={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.Name}</td>\r\n                                        <td>{item.Abbrevlation}</td>\r\n                                        <td>{item.Contact_Email}</td>\r\n                                        <td>{item.Website}</td>\r\n                                        <td>{item.Nr_Employees}</td>\r\n                                        <td>{item.Revenue}</td>\r\n                                        <td>{item.Profit}</td>\r\n                                        <td>{item.AuthorAnonymous}</td>\r\n                                        <td>\r\n                                            <Button variant=\"outlined\" color=\"primary\" href=\"#outlined-buttons\"\r\n                                                    onClick={() => {\r\n                                                        this.EditData(index)\r\n                                                    }}>\r\n                                                <EditIcon/>\r\n                                            </Button>\r\n                                            &nbsp;&nbsp;\r\n                                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => {\r\n                                                this.DeleteData(index)\r\n                                            }}>\r\n                                                <DeleteIcon/>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrgForm;","C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\App.js",["28"],"C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\index.js",[],["29","30"],"C:\\Users\\Bvm_Unity_1\\Desktop\\Myproject\\first_project\\src\\Hook_CRUD.js",["31","32","33","34","35","36","37","38","39","40"],{"ruleId":"41","severity":1,"message":"42","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":60,"column":33,"nodeType":"47","messageId":"48","endLine":60,"endColumn":34,"suggestions":"49"},{"ruleId":"45","severity":1,"message":"50","line":61,"column":44,"nodeType":"47","messageId":"48","endLine":61,"endColumn":45,"suggestions":"51"},{"ruleId":"45","severity":1,"message":"50","line":61,"column":97,"nodeType":"47","messageId":"48","endLine":61,"endColumn":98,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":12,"column":7,"nodeType":"55","endLine":12,"endColumn":19},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"41","severity":1,"message":"60","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},{"ruleId":"41","severity":1,"message":"61","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":18},{"ruleId":"41","severity":1,"message":"62","line":26,"column":12,"nodeType":"43","messageId":"44","endLine":26,"endColumn":23},{"ruleId":"41","severity":1,"message":"63","line":26,"column":24,"nodeType":"43","messageId":"44","endLine":26,"endColumn":38},{"ruleId":"41","severity":1,"message":"64","line":27,"column":12,"nodeType":"43","messageId":"44","endLine":27,"endColumn":16},{"ruleId":"41","severity":1,"message":"65","line":27,"column":17,"nodeType":"43","messageId":"44","endLine":27,"endColumn":24},{"ruleId":"41","severity":1,"message":"66","line":28,"column":12,"nodeType":"43","messageId":"44","endLine":28,"endColumn":18},{"ruleId":"41","severity":1,"message":"67","line":28,"column":19,"nodeType":"43","messageId":"44","endLine":28,"endColumn":32},{"ruleId":"68","severity":1,"message":"69","line":110,"column":56,"nodeType":"70","endLine":110,"endColumn":79},{"ruleId":"68","severity":1,"message":"69","line":143,"column":82,"nodeType":"70","endLine":143,"endColumn":103},"no-unused-vars","'AddIcon' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["71","72"],"Unnecessary escape character: \\+.",["73","74"],["75","76"],"react/jsx-pascal-case","Imported JSX component Hook_CRUD must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'errors' is assigned a value but never used.","'setValidation' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"messageId":"79","fix":"80","desc":"81"},{"messageId":"82","fix":"83","desc":"84"},{"messageId":"79","fix":"85","desc":"81"},{"messageId":"82","fix":"86","desc":"84"},{"messageId":"79","fix":"87","desc":"81"},{"messageId":"82","fix":"88","desc":"84"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"89","text":"90"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"91","text":"92"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"93","text":"90"},{"range":"94","text":"92"},{"range":"95","text":"90"},{"range":"96","text":"92"},[1617,1618],"",[1617,1617],"\\",[1693,1694],[1693,1693],[1746,1747],[1746,1746]]